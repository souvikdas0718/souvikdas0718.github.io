{"ast":null,"code":"var _jsxFileName = \"/Users/souvikdas/WebstormProjects/MyPortFolio/src/components/Navbar.jsx\";\nimport React, { useState } from \"react\";\nimport { useScrollPosition } from \"../hooks/useScrollPosition\";\nimport useResizeObserver from \"../hooks/useResizeObserver\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { about, experiences, leadership, mainBody, repos, skills } from \"../editable-stuff/config.js\";\nconst Navigation = React.forwardRef((props, ref) => {\n  // const { showBlog, FirstName } = config;\n  const [isTop, setIsTop] = useState(true);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const navbarMenuRef = React.useRef();\n  const navbarDimensions = useResizeObserver(navbarMenuRef);\n  const navBottom = navbarDimensions ? navbarDimensions.bottom : 0;\n  useScrollPosition(({\n    prevPos,\n    currPos\n  }) => {\n    if (!navbarDimensions) return;\n    currPos.y + ref.current.offsetTop - navbarDimensions.bottom > 5 ? setIsTop(true) : setIsTop(false);\n    setScrollPosition(currPos.y);\n  }, [navBottom]);\n  React.useEffect(() => {\n    if (!navbarDimensions) return;\n    navBottom - scrollPosition >= ref.current.offsetTop ? setIsTop(false) : setIsTop(true);\n  }, [navBottom, navbarDimensions, ref, scrollPosition]);\n  return /*#__PURE__*/React.createElement(Navbar, {\n    ref: navbarMenuRef,\n    className: ` fixed-top  ${!isTop ? \"navbar-white\" : \"navbar-transparent\"}`,\n    expand: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    className: \"brand\",\n    href: process.env.PUBLIC_URL + \"/#home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, `<${mainBody.firstName} />`), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"basic-navbar-nav\",\n    className: \"toggler\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, repos.show && /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"nav-link lead\",\n    href: process.env.PUBLIC_URL + \"/#projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"nav-link lead\",\n    href: about.resume,\n    target: \"_blank\",\n    rel: \"noreferrer noopener\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Resume\"), about.show && /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"nav-link lead\",\n    href: process.env.PUBLIC_URL + \"/#aboutme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"About\"), leadership.show && /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"nav-link lead\",\n    href: process.env.PUBLIC_URL + \"/#leadership\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Leadership\"), skills.show && /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"nav-link lead\",\n    href: process.env.PUBLIC_URL + \"/#skills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Skills\"))));\n});\nexport default Navigation;","map":{"version":3,"sources":["/Users/souvikdas/WebstormProjects/MyPortFolio/src/components/Navbar.jsx"],"names":["React","useState","useScrollPosition","useResizeObserver","Navbar","Nav","about","experiences","leadership","mainBody","repos","skills","Navigation","forwardRef","props","ref","isTop","setIsTop","scrollPosition","setScrollPosition","navbarMenuRef","useRef","navbarDimensions","navBottom","bottom","prevPos","currPos","y","current","offsetTop","useEffect","process","env","PUBLIC_URL","firstName","show","resume"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useScrollPosition} from \"../hooks/useScrollPosition\";\nimport useResizeObserver from \"../hooks/useResizeObserver\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {about, experiences, leadership, mainBody, repos, skills} from \"../editable-stuff/config.js\";\n\nconst Navigation = React.forwardRef((props, ref) => {\n  // const { showBlog, FirstName } = config;\n  const [isTop, setIsTop] = useState(true);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const navbarMenuRef = React.useRef();\n  const navbarDimensions = useResizeObserver(navbarMenuRef);\n  const navBottom = navbarDimensions ? navbarDimensions.bottom : 0;\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      if (!navbarDimensions) return;\n      currPos.y + ref.current.offsetTop - navbarDimensions.bottom > 5\n        ? setIsTop(true)\n        : setIsTop(false);\n      setScrollPosition(currPos.y);\n    },\n    [navBottom]\n  );\n\n  React.useEffect(() => {\n    if (!navbarDimensions) return;\n    navBottom - scrollPosition >= ref.current.offsetTop\n      ? setIsTop(false)\n      : setIsTop(true);\n  }, [navBottom, navbarDimensions, ref, scrollPosition]);\n\n  return (\n    <Navbar\n      ref={navbarMenuRef}\n      className={` fixed-top  ${\n        !isTop ? \"navbar-white\" : \"navbar-transparent\"\n      }`}\n      expand=\"lg\"\n    >\n      <Navbar.Brand className=\"brand\" href={process.env.PUBLIC_URL + \"/#home\"}>\n        {`<${mainBody.firstName} />`}\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"toggler\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          {/* {\n            <Nav.Link className=\"nav-link lead\">\n              <Link to={process.env.PUBLIC_URL + \"/blog\"}>Blog</Link>\n            </Nav.Link>\n          } */}\n          {repos.show && (\n            <Nav.Link\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#projects\"}\n            >\n              Projects\n            </Nav.Link>\n          )}\n            <Nav.Link\n                className=\"nav-link lead\"\n                href={about.resume}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n            >\n                Resume\n            </Nav.Link>\n          {about.show && (\n            <Nav.Link\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#aboutme\"}\n            >\n              About\n            </Nav.Link>\n          )}\n          {leadership.show && (\n            <Nav.Link\n              className=\"nav-link lead\"\n              href={process.env.PUBLIC_URL + \"/#leadership\"}\n            >\n              Leadership\n            </Nav.Link>\n          )}{skills.show && (\n                <Nav.Link\n                    className=\"nav-link lead\"\n                    href={process.env.PUBLIC_URL + \"/#skills\"}\n                >\n                    Skills\n                </Nav.Link>\n            )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n});\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}